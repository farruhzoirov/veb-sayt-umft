openapi: 3.1.0
info:
  title: NEW UMFT SITE FRONTEND API
  description: GREAT PROJECT
  version: 1.0.0
servers:
  - url: http://95.130.227.52:4131
    description: Production server
  - url: http://localhost:4131
    description: Local development server


paths:
  ##Category
  /front/category:
    get:
      summary: Getting category for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Category

  /front/category/{slug}:
    get:
      summary: Getting category for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Category

  ## News
  /front/news:
    get:
      summary: Getting news for frontend
      description: You can filter which you want.
      parameters:
        - in: query
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
        - in: query
          name: categories_slug
          schema:
            type: array
            items:
              type: string

      responses:
        "200": # status code
          description: Getting news for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - News

  /front/news/{slug}:
    get:
      summary: Getting news for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one news for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - News

  ## Partner
  /front/partner:
    get:
      summary: Getting partners for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting partners for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Partner

  /front/partner/{slug}:
    get:
      summary: Getting partner for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one partner for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Partner

  ## Social
  /front/social:
    post:
      summary: Getting socials for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slugs:
                  type: array
      responses:
        "200": # status code
          description: Getting partners for frontend
          content:
            application/json:
              schema:
                type: object



      tags:
        - Social

  /front/social/{slug}:
    get:
      summary: Getting social for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Social

  ## Events
  /front/events:
    post:
      summary: Getting events for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                eventsCategory:
                  type: array
                  items:
                    type: string
                    example: "764fdsfdt4353234dfs"
      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Events

  /front/events/{slug}:
    get:
      summary: Getting events for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Events

  ## EventsCategory
  /front/eventsCategory:
    get:
      summary: Getting eventsCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches model for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - EventsCategory

  /front/eventsCategory/{slug}:
    get:
      summary: Getting eventsCategory for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - EventsCategory

  ## Licence
  /front/licence:
    get:
      summary: Getting licence for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Licence

  /front/licence/{slug}:
    get:
      summary: Getting licence for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Licence

  ## Employee
  /front/employee:
    get:
      summary: Getting employee for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Employee

  /front/employee/{slug}:
    get:
      summary: Getting employee for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Employee

  ## Specialty
  /front/specialty:
    get:
      summary: Getting specialty for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Specialty

  /front/specialty/{slug}:
    get:
      summary: Getting specialty for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Specialty

  ## Format
  /front/format:
    get:
      summary: Getting format for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Format

  /front/format/{slug}:
    get:
      summary: Getting format for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Format

  ## Department
  /front/department:
    get:
      summary: Getting department for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Department

  /front/department/{slug}:
    get:
      summary: Getting department for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Department

  ## Degree
  /front/degree:
    get:
      summary: Getting degree for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Degree

  /front/degree/{slug}:
    get:
      summary: Getting degree for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Degree
  ## Programs
  /front/programs:
    post:
      summary: Getting specialties for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: language
        - in: query
          name: limit
          schema:
            type: string
          required: false
        - in: query
          name: page
          schema:
            type: string
          required: false
        - in: query
          name: select
          schema:
            type: string
          required: false
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  department:
                      type: string
                  format:
                      type: string
                  degree:
                      type: string

      responses:
        "200": # status code
          description: Getting matches modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Programs

  /front/programs/{slug}:
    get:
      summary: Getting specialty for frontend
      description: You can filter which you want.
      parameters:
        - in: path
          name: slug
      responses:
        "200": # status code
          description: Getting one modelData for frontend
          content:
            application/json:
              schema:
                type: object

      tags:
        - Programs